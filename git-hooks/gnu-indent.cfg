indent_with_tabs		= 1		# 1=indent to level only, 2=indent with tabs
input_tab_size			= 2		# original tab size
output_tab_size			= 2		# new tab size
indent_columns			= 2
indent_align_string		= true		# align broken strings
indent_brace			= 2
indent_class			= true
indent_func_call_param		= true
indent_func_class_param		= true
indent_func_ctor_var_param	= true


nl_do_brace			= force		# "do {" vs "do \n {"
nl_if_brace			= force		# "if () {" vs "if () \n {"
nl_for_brace			= force		# "for () {" vs "for () \n {"
nl_else_brace			= force		# "else {" vs "else \n {"
nl_while_brace			= force		# "while () {" vs "while () \n {"
nl_switch_brace			= add		# "switch () {" vs "switch () \n {"
nl_func_var_def_blk		= 1
nl_before_case			= 1
nl_fcall_brace			= add		# "foo() {" vs "foo()\n{"
nl_fdef_brace			= force		# "int foo() {" vs "int foo()\n{"
nl_brace_while			= remove
nl_brace_else			= force
nl_squeeze_ifdef		= false
nl_func_type_name		= add
nl_after_class			= 2
nl_class_colon			= ignore

mod_full_brace_if		= force		# "if (a) a--;" vs "if (a) { a--; }"
mod_full_brace_for		= force		# "for () a--;" vs "for () { a--; }"
mod_full_brace_do		= force		# "do a--; while ();" vs "do { a--; } while ();"
mod_full_brace_while		= force		# "while (a) a--;" vs "while (a) { a--; }"

sp_func_class_paren		= force
sp_before_semi			= remove
sp_paren_paren			= remove	# space between (( and ))
sp_return_paren			= remove	# "return (1);" vs "return(1);"
sp_sizeof_paren			= remove	# "sizeof (int)" vs "sizeof(int)"
sp_before_sparen		= force		# "if (" vs "if("
sp_after_sparen			= force		# "if () {" vs "if (){"
sp_after_cast			= add		# "(int) a" vs "(int)a"
sp_inside_braces		= force		# "{ 1 }" vs "{1}"
sp_inside_braces_struct		= force		# "{ 1 }" vs "{1}"
sp_inside_braces_enum		= force		# "{ 1 }" vs "{1}"
sp_inside_paren			= remove
sp_inside_fparen		= remove
sp_inside_sparen		= remove
sp_assign			= force
sp_arith			= force
sp_bool				= force
sp_compare			= force
sp_after_comma			= force
sp_func_def_paren		= force		# "int foo (){" vs "int foo(){"
sp_func_call_paren		= force		# "foo (" vs "foo("
sp_func_proto_paren		= force		# "int foo ();" vs "int foo();"
sp_after_ptr_star		= force

sp_template_angle		= force
sp_inside_angle			= remove
sp_after_angle			= force
sp_angle_paren			= force
sp_angle_word			= force

align_func_params		= false
align_var_def_span		= 1
align_assign_span		= 1
align_right_cmt_span		= 1
align_right_cmt_gap		= 1

cmt_reflow_mode			= 0
cmt_width			= 75
cmt_c_group			= true
indent_col1_comment		= true
align_right_cmt_gap		= 0
align_right_cmt_at_col		= 0
cmt_c_nl_start			= true
cmt_c_nl_end			= true
cmt_star_cont			= true

eat_blanks_before_close_brace	= TRUE
eat_blanks_after_open_brace	= TRUE

code_width			= 80
ls_func_split_full		= true

align_var_def_star_style	= 2 # Type *var
